class Solution {
public:
    vector<double> medianSlidingWindow(vector<int>& nums, int k) {
        vector<double> output;
        vector<int> temp(nums.begin(), nums.begin() + k);
        sort(temp.begin(), temp.end());
        int a,b;
        if(k%2)
            a = b = k / 2;
        else
            a = (b = k/2) - 1;
        long long int tempi = (long long)temp[a] + temp[b];
        output.push_back((double)(tempi) / 2.0);
        for(int i = k; i < nums.size(); i ++){
            int x = nums[i - k];
            int y = nums[i];
            for(int j = 0; j < k; j ++){
                if(y <= temp[j]){
                    temp.insert(temp.begin() + j, y);
                    break;
                }
                if(j == k - 1)
                    temp.insert(temp.begin() + j + 1, y);
            }
            for(int j = 0; j < k + 1; j ++){
                if(x == temp[j]){
                    temp.erase(temp.begin() + j);
                    break;
                }
            }
            tempi = (long long)temp[a] + temp[b];
            output.push_back((double)(tempi) / 2.0);
        }
        return output;
    }
};
