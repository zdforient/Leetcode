class Solution {
public:
    int reversePairs(vector<int>& nums) {
        return sort_pair(nums.begin(), nums.end());
    }
    int sort_pair(vector<int>::iterator begin, vector<int>::iterator end){
        if(end - begin < 2)
            return 0;
        int count = 0;
        auto mid = (end - begin) / 2 + begin;
        count += sort_pair(begin,mid) + sort_pair(mid,end);
        for(auto i = begin, j = mid; i != mid; i++){
            while(j != end && *i > 2L * *j)
                j++;
            count += j - mid;
        }
        inplace_merge(begin, mid, end);
        return count;
    }
};
