
class MyQueue {
public:
	/** Initialize your data structure here. */
	vector<int> que;
	MyQueue() {

	}

	/** Push element x to the back of queue. */
	void push(int x) {
		que.push_back(x);
	}

	/** Removes the element from in front of queue and returns that element. */
	int pop() {
		if (!que.empty()) {
			int a = que[0];
			que.erase(que.begin());
			return a;
		}
        else
            return -1;
	}

	/** Get the front element. */
	int peek() {
		if (!que.empty()) {
			return que[0];
		}
        else
            return -1;
	}

	/** Returns whether the queue is empty. */
	bool empty() {
		return que.empty();
	}
};

/**
* Your MyQueue object will be instantiated and called as such:
* MyQueue* obj = new MyQueue();
* obj->push(x);
* int param_2 = obj->pop();
* int param_3 = obj->peek();
* bool param_4 = obj->empty();
*/
