class Solution {
public:
    int maxProfit(vector<int>& prices) {
        vector<int> maxProfit{0};
        int minprice = prices[0];
        int sumProfit = 0;
        for (int i = 0; i < prices.size(); i ++){
          if(minprice + maxProfit.back() >= prices[i]){
            minprice = prices[i];
            maxProfit.push_back(0);
            continue;
          }
          if(prices[i] > minprice + maxProfit)
            maxProfit.back() = prices[i] - minprice;
        }
        for(auto i:maxProfit)
          sumProfit += i;
        return sumProfit;
    }
};



answer:
class Solution {
public:
	int maxProfit(vector<int>& prices) {
		int maxProfit = 0;
		for (int i = 1; i < prices.size(); i++)
			if (prices[i] > prices[i - 1])
				maxProfit += prices[i] - prices[i - 1];

		return maxProfit;
	}
};
