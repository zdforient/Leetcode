class Solution {
public:
    void permutehelper(vector<vector<int>> &output, int cur, vector<int> nums){
        if(cur == nums.size()){
            output.push_back(nums);
            return;
        }
        for(int i = cur; i < nums.size(); i ++){
            swap(nums[i], nums[cur]);
            permutehelper(output, cur + 1, nums);
            //swap(nums[i], nums[cur]);
            while(i < nums.size() - 1 && (nums[i + 1] == nums[i] || nums[i+1] == nums[cur]))
                i++;
        }
    }
    vector<vector<int>> permuteUnique(vector<int>& nums) {
        vector<vector<int>> output;
        sort(nums.begin(), nums.end());
        permutehelper(output, 0, nums);
        return output;        
    }
};
