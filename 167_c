class Solution {
public:
	vector<int> twoSum(vector<int>& numbers, int target) {
		vector<int> res;
		vector<int> output;
		for (int i = 0; i < numbers.size(); i++) {
			for (int j = 0; j < res.size(); j++) {
				if (numbers[i] == res[j]) {
					output.push_back(j + 1);
					output.push_back(i + 1);
					return output;
				}
			}
			res.push_back(target - numbers[i]);
		}
		return output;
	}
};



It's a binary search problem

class Solution {
public:
    vector<int> twoSum(vector<int>& numbers, int target) {
        int left = 0, right = numbers.size() - 1;
        vector<int> res;
        while(left < right){
            long long val = numbers[left] + numbers[right];
            if(val == target){
                res.push_back(left + 1);
                res.push_back(right + 1);
                break;
            }else if(val < target)
                left++;
            else
                right--;
        }
        return res;
    }
};
