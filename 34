class Solution {
public:
    vector<int> searchRange(vector<int>& nums, int target) {
        vector<int> output{-1,-1};
        if(nums.empty())
            return output;
        if(nums[0] > target || nums.back() < target)
            return output;
        int low = 0, low0 = 0, high = nums.size() - 1, mid = nums.size() / 2;
        while(1){
            if(low < nums.size() - 1){
                if(nums[low + 1] >= target)
                    break;
            }
            else
                break;
            mid = (low + high) / 2;
            if(nums[mid] < target)
                low = mid;
            else
                high = mid;
        }
        low0 = low;
        high = nums.size() - 1;
        mid = nums.size() / 2;
        while(1){
            if(high >= 1){
                if(nums[high - 1] <= target)
                    break;
            }
            else
                break;
            mid = (low + high) / 2;
            if(nums[mid] > target)
                high = mid;
            else
                low = mid;
        }
        low = low0;
        if(low < high - 1){
            if(nums[low] == target)
                output[0] = low;
            else
                output[0] = low+1;
            if(nums[high] == target)
                output[1] = high;
            else
                output[1] = high - 1;
            return output;
        }
        else if(low <= high){
            if(nums[low] == target)
                output[0] = low;
            else if(nums[low + 1] == target)
                output[0] = low + 1;
            else 
                output[0] = -1;
            if(nums[high] == target)
                output[1] = high;
            else if (nums[high - 1] == target)
                output[1] = high - 1;
            else output[1] = -1;
            return output;
        }
        else return output;
    }
};
